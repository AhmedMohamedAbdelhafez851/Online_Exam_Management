@model IEnumerable<OnlineExamSystem.Domains.Entities.Question>
@{
    ViewData["Title"] = "Exam Questions";
    var examTitle = ViewBag.ExamTitle;
    var examId = ViewBag.ExamId;
}

@Html.AntiForgeryToken()

<div class="container py-4">
    <div class="card shadow-sm border-0 rounded-3">
        <div class="card-header bg-primary bg-gradient text-white py-3">
            <div class="d-flex flex-wrap justify-content-between align-items-center gap-3">
                <div>
                    <h3 class="mb-0 fw-semibold">
                        <i class="bi bi-list-check me-2"></i>Exam Questions
                    </h3>
                    <p class="mb-0 opacity-75 small">@examTitle</p>
                </div>
                <div class="d-flex gap-2">
                    <a asp-controller="Exam" asp-action="Index" class="btn btn-outline-light btn-sm px-3">
                        <i class="bi bi-arrow-left me-1"></i> Back to Exams
                    </a>
                    <a asp-controller="Question" asp-action="Add" asp-route-examId="@examId"
                       class="btn btn-light btn-sm px-3">
                        <i class="bi bi-plus-circle me-1"></i> Add Question
                    </a>
                </div>
            </div>
        </div>

        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table id="questionsTable" class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="ps-4" style="width: 50%">Question</th>
                                <th style="width: 35%">Answer Choices</th>
                                <th class="text-center" style="width: 15%">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var question in Model)
                            {
                                <tr id="question-row-@question.QuestionId">
                                    <td class="ps-4 align-middle">
                                        <p class="mb-0 fw-medium">@question.Title</p>
                                    </td>
                                    <td>
                                        <div class="py-2">
                                            @foreach (var choice in question.Choices)
                                            {
                                                <div class="d-flex align-items-center mb-1 py-1 px-2 rounded-2 @(choice.IsCorrect ? "bg-success bg-opacity-10 border-start border-4 border-success" : "")">
                                                    <span class="me-2">
                                                        <i class="bi @(choice.IsCorrect ? "bi-check-circle-fill text-success" : "bi-circle text-muted")"></i>
                                                    </span>
                                                    <span class="@(choice.IsCorrect ? "fw-medium" : "")">@choice.Text</span>
                                                    @if (choice.IsCorrect)
                                                    {
                                                        <span class="badge bg-success bg-opacity-75 ms-2 small">Correct</span>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </td>
                                    <td class="text-center align-middle">
                                        <div class="btn-group" role="group">
                                            <a asp-controller="Question" asp-action="Edit" asp-route-id="@question.QuestionId"
                                               asp-route-examId="@examId" class="btn btn-sm btn-outline-primary"
                                               data-bs-toggle="tooltip" title="Edit Question">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger delete-question-btn"
                                                    data-id="@question.QuestionId" data-exam-id="@examId"
                                                    data-bs-toggle="tooltip" title="Delete Question">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="p-4">
                    <div class="alert alert-info border-0 shadow-sm d-flex align-items-center gap-3" role="alert">
                        <div class="bg-info bg-opacity-25 p-3 rounded-circle">
                            <i class="bi bi-info-circle-fill text-info fs-4"></i>
                        </div>
                        <div>
                            <h5 class="alert-heading mb-1">No Questions Available</h5>
                            <p class="mb-0 text-muted">This exam doesn't have any questions yet. Get started by adding your first question.</p>
                        </div>
                    </div>
                    <div class="text-center mt-4">
                        <a asp-controller="Question" asp-action="Add" asp-route-examId="@examId"
                           class="btn btn-primary px-4">
                            <i class="bi bi-plus-circle me-2"></i> Add First Question
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteQuestionModal" tabindex="-1" aria-labelledby="deleteQuestionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white py-3">
                <h5 class="modal-title" id="deleteQuestionModalLabel">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-danger bg-opacity-10 p-3 rounded-circle me-3">
                        <i class="bi bi-trash-fill text-danger fs-4"></i>
                    </div>
                    <div>
                        <h5 class="mb-1">Delete Question</h5>
                        <p class="text-muted mb-0">Are you sure you want to permanently delete this question?</p>
                    </div>
                </div>
                <div class="alert alert-warning border-0 bg-warning bg-opacity-10 d-flex align-items-center gap-2 mt-3">
                    <i class="bi bi-exclamation-circle-fill text-warning"></i>
                    <span class="small">This action cannot be undone. All associated data will be lost.</span>
                </div>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">
                    <i class="bi bi-x me-1"></i> Cancel
                </button>
                <button type="button" class="btn btn-danger px-4" id="confirmDeleteQuestion">
                    <i class="bi bi-trash me-1"></i> Delete Question
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl, {
                    boundary: document.body
                })
            });

            // Delete question functionality
            $(".delete-question-btn").click(function () {
                // Hide any active tooltips first
                tooltipTriggerList.forEach(el => {
                    const tooltip = bootstrap.Tooltip.getInstance(el);
                    if (tooltip) tooltip.hide();
                });

                var questionId = $(this).data("id");
                var examId = $(this).data("exam-id");
                $("#confirmDeleteQuestion").data("id", questionId);
                $("#confirmDeleteQuestion").data("exam-id", examId);
                $("#deleteQuestionModal").modal("show");
            });

            $("#confirmDeleteQuestion").click(function () {
                var questionId = $(this).data("id");
                var examId = $(this).data("exam-id");

                // Add loading state to button
                var $button = $(this);
                $button.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Deleting...');

                $.ajax({
                    url: '@Url.Action("Delete", "Question")',
                    type: 'POST',
                    data: { id: questionId, examId: examId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        $('#deleteQuestionModal').modal('hide');

                        if (response.success) {
                            $("#question-row-" + questionId).fadeOut(300, function() {
                                $(this).remove();
                                if ($("#questionsTable tbody tr").length === 0) {
                                    $(".table-responsive").fadeOut(300, function() {
                                        $(this).replaceWith(`
                                            <div class="p-4">
                                                <div class="alert alert-info border-0 shadow-sm d-flex align-items-center gap-3" role="alert">
                                                    <div class="bg-info bg-opacity-25 p-3 rounded-circle">
                                                        <i class="bi bi-info-circle-fill text-info fs-4"></i>
                                                    </div>
                                                    <div>
                                                        <h5 class="alert-heading mb-1">No Questions Available</h5>
                                                        <p class="mb-0 text-muted">This exam doesn't have any questions yet. Get started by adding your first question.</p>
                                                    </div>
                                                </div>
                                                <div class="text-center mt-4">
                                                    <a href="/Question/Add?examId=${examId}" class="btn btn-primary px-4">
                                                        <i class="bi bi-plus-circle me-2"></i> Add First Question
                                                    </a>
                                                </div>
                                            </div>
                                        `);
                                    });
                                }
                            });
                            showToast('success', 'Success', response.message);
                        } else {
                            showToast('danger', 'Error', response.message);
                        }

                        // Reset button state
                        $button.prop('disabled', false).html('<i class="bi bi-trash me-1"></i> Delete Question');
                    },
                    error: function (xhr, status, error) {
                        $('#deleteQuestionModal').modal('hide');
                        var errorMessage = 'Failed to delete question: ' + (xhr.responseText || status || error);
                        showToast('danger', 'Error', errorMessage);
                        console.error('Delete Error:', {
                            status: status,
                            error: error,
                            responseText: xhr.responseText
                        });

                        // Reset button state
                        $button.prop('disabled', false).html('<i class="bi bi-trash me-1"></i> Delete Question');
                    }
                });
            });

            function showToast(type, title, message) {
                const toastId = 'toast-' + Date.now();
                const bgClass = type === 'success' ? 'bg-success' : 'bg-danger';
                const iconClass = type === 'success' ? 'bi-check-circle-fill' : 'bi-exclamation-circle-fill';

                const toastHtml = `
                    <div id="${toastId}" class="toast align-items-center border-0 ${bgClass} text-white" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body d-flex align-items-center">
                                <i class="bi ${iconClass} me-2"></i>
                                <div>
                                    <strong>${title}</strong>
                                    <div>${message}</div>
                                </div>
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;

                $('.toast-container').append(toastHtml);
                const toastElement = document.getElementById(toastId);
                const toast = new bootstrap.Toast(toastElement, {
                    autohide: true,
                    delay: 5000
                });
                toast.show();

                // Remove toast from DOM after it's hidden
                $(toastElement).on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
    </script>
}