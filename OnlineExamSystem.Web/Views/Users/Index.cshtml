@model IEnumerable<OnlineExamSystem.Domains.Entities.ApplicationUser>
@{
    ViewData["Title"] = "User Management";
}

<!-- Add Bootstrap Icons CSS if not already in layout -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">

<div class="container py-4">
    <div class="card shadow-sm border-0 rounded-3">
        <div class="card-header bg-primary bg-gradient text-white py-3">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                <h2 class="mb-0 fw-semibold"><i class="bi bi-people me-2"></i>User Management</h2>
                <a asp-action="Create" class="btn btn-light">
                    <i class="bi bi-plus-circle me-2"></i>Create New User
                </a>
            </div>
        </div>
        <div class="card-body p-0">
            @if (!Model.Any())
            {
                <div class="p-4">
                    <div class="alert alert-info border-0 shadow-sm d-flex align-items-center gap-3" role="alert">
                        <div class="bg-info bg-opacity-25 p-3 rounded-circle">
                            <i class="bi bi-info-circle-fill text-info fs-4"></i>
                        </div>
                        <div>
                            <h5 class="alert-heading mb-1">No Users Found</h5>
                            <p class="mb-0 text-muted">There are no users in the system yet. Click the "Create New User" button to add your first user.</p>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0" id="userTable">
                        <thead class="table-light">
                            <tr>
                                <th class="ps-4">Full Name</th>
                                <th>Email</th>
                                <th>Roles</th>
                                <th class="text-center" style="width: 160px">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr id="user-@user.Id">
                                    <td class="ps-4">
                                        <div class="fw-medium">@user.FullName</div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-envelope text-muted me-2"></i>
                                            <span>@user.Email</span>
                                        </div>
                                    </td>
                                    <td>
                                        @if (ViewBag.UserRoles != null && ViewBag.UserRoles.ContainsKey(user.Id))
                                        {
                                            <div class="d-flex flex-wrap gap-1">
                                                @foreach (var role in ViewBag.UserRoles[user.Id])
                                                {
                                                    <span class="badge bg-secondary bg-opacity-75 text-white">@role</span>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted fst-italic small">No roles assigned</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="d-flex gap-2 justify-content-center">
                                            <a asp-controller="Roles" asp-action="ManageRoles" asp-route-userId="@user.Id"
                                               class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="Manage Roles">
                                                <i class="bi bi-person-gear"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@user.Id"
                                               class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="Edit User">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger delete-user-btn"
                                                    data-user-id="@user.Id"
                                                    data-user-name="@user.FullName"
                                                    data-bs-toggle="tooltip" title="Delete User">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white py-3">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-danger bg-opacity-10 p-3 rounded-circle me-3">
                        <i class="bi bi-person-x-fill text-danger fs-3"></i>
                    </div>
                    <div>
                        <h5 class="mb-1">Delete User</h5>
                        <p class="text-muted mb-0">Are you sure you want to delete <strong id="userNameToDelete"></strong>?</p>
                    </div>
                </div>
                <div class="alert alert-warning border-0 bg-warning bg-opacity-10 d-flex align-items-center gap-2 mt-3">
                    <i class="bi bi-exclamation-circle-fill text-warning"></i>
                    <span class="small">This action cannot be undone. All associated data will be lost.</span>
                </div>
            </div>
            <div class="modal-footer bg-light">
                <form id="deleteUserForm" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="userId" name="id" value="" />
                    <button type="button" class="btn btn-outline-secondary px-3" data-bs-dismiss="modal">
                        <i class="bi bi-x me-1"></i> Cancel
                    </button>
                    <button type="submit" class="btn btn-danger px-3" id="confirmDelete">
                        <i class="bi bi-trash me-1"></i> Delete User
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Error Modal -->
<div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="errorModalLabel">
                    <i class="bi bi-exclamation-octagon-fill me-2"></i>Error
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="d-flex gap-3 align-items-center">
                    <div class="bg-danger bg-opacity-10 p-3 rounded-circle">
                        <i class="bi bi-x-circle-fill text-danger fs-1"></i>
                    </div>
                    <div>
                        <h5 class="mb-2">Failed to delete user</h5>
                        <p class="text-muted mb-0" id="errorMessage">The system encountered an error while attempting to delete this user.</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl, {
                    boundary: document.body
                });
            });

            // Handle delete button click
            $(".delete-user-btn").click(function () {
                // Hide any active tooltips
                tooltipTriggerList.forEach(el => {
                    const tooltip = bootstrap.Tooltip.getInstance(el);
                    if (tooltip) tooltip.hide();
                });

                const userId = $(this).data("user-id");
                const userName = $(this).data("user-name");

                $("#userId").val(userId);
                $("#userNameToDelete").text(userName);
                $("#deleteModal").modal("show");
            });

            // Handle delete form submission
            $("#deleteUserForm").on("submit", function(e) {
                e.preventDefault();

                const userId = $("#userId").val();
                const $deleteBtn = $("#confirmDelete");

                // Disable button and show loading state
                $deleteBtn.prop("disabled", true).html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Deleting...');

                $.ajax({
                    url: '@Url.Action("DeleteConfirmed", "Users")',
                    type: 'POST',
                    data: {
                        id: userId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        $("#deleteModal").modal("hide");

                        if (response.success) {
                            // Remove the user row with animation
                            $("#user-" + userId).fadeOut(300, function() {
                                $(this).remove();

                                // Show empty state if no users left
                                if ($("#userTable tbody tr").length === 0) {
                                    $(".table-responsive").fadeOut(300, function() {
                                        $(this).replaceWith(`
                                            <div class="p-4">
                                                <div class="alert alert-info border-0 shadow-sm d-flex align-items-center gap-3" role="alert">
                                                    <div class="bg-info bg-opacity-25 p-3 rounded-circle">
                                                        <i class="bi bi-info-circle-fill text-info fs-4"></i>
                                                    </div>
                                                    <div>
                                                        <h5 class="alert-heading mb-1">No Users Found</h5>
                                                        <p class="mb-0 text-muted">There are no users in the system yet. Click the "Create New User" button to add your first user.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        `);
                                    });
                                }

                                showToast("success", "Success", response.message || "User deleted successfully");
                            });
                        } else {
                            // Show error message with detailed errors if available
                            $("#errorMessage").text(response.message + (response.errors ? " Details: " + response.errors.join(", ") : ""));
                            setTimeout(function() {
                                $("#errorModal").modal("show");
                            }, 500);
                        }
                    },
                    error: function(xhr, status, error) {
                        $("#deleteModal").modal("hide");

                        // Prepare error message
                        let errorMessage = "Failed to delete user";
                        try {
                            // Try to parse error response
                            const responseObj = JSON.parse(xhr.responseText);
                            if (responseObj && responseObj.message) {
                                errorMessage = responseObj.message + (responseObj.errors ? " Details: " + responseObj.errors.join(", ") : "");
                            }
                        } catch (e) {
                            // Use status text if parsing fails
                            if (xhr.statusText) {
                                errorMessage += ": " + xhr.statusText;
                            }
                        }

                        // Show error modal
                        $("#errorMessage").text(errorMessage);
                        setTimeout(function() {
                            $("#errorModal").modal("show");
                        }, 500);

                        console.error("Delete Error:", {
                            status: status,
                            error: error,
                            responseText: xhr.responseText,
                            statusCode: xhr.status
                        });
                    },
                    complete: function() {
                        // Reset button state
                        $deleteBtn.prop("disabled", false).html('<i class="bi bi-trash me-1"></i> Delete User');
                    }
                });
            });

            function showToast(type, title, message) {
                const toastId = 'toast-' + Date.now();
                const bgClass = type === 'success' ? 'bg-success' : 'bg-danger';
                const iconClass = type === 'success' ? 'bi-check-circle-fill' : 'bi-exclamation-circle-fill';

                const toastHtml = `
                    <div id="${toastId}" class="toast align-items-center border-0 ${bgClass} text-white" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body d-flex align-items-center">
                                <i class="bi ${iconClass} me-2"></i>
                                <div>
                                    <strong>${title}</strong>
                                    <div>${message}</div>
                                </div>
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;

                $('.toast-container').append(toastHtml);
                const toastElement = document.getElementById(toastId);
                const toast = new bootstrap.Toast(toastElement, {
                    autohide: true,
                    delay: 5000
                });
                toast.show();

                // Remove toast from DOM after it's hidden
                $(toastElement).on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
    </script>
}